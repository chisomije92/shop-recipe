{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-interceptor.service.ts","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.guard.ts","./src/app/auth/auth.module.ts","./src/app/auth/auth.service.ts","./src/app/auth/store/auth.actions.ts","./src/app/auth/store/auth.effects.ts","./src/app/auth/store/auth.reducer.ts","./src/app/auth/store/auth.selectors.ts","./src/app/auth/user.model.ts","./src/app/core.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/recipe/recipe-detail/recipe-detail.component.ts","./src/app/recipe/recipe-detail/recipe-detail.component.html","./src/app/recipe/recipe-edit/recipe-edit.component.ts","./src/app/recipe/recipe-edit/recipe-edit.component.html","./src/app/recipe/recipe-list/recipe-item/recipe-item.component.ts","./src/app/recipe/recipe-list/recipe-item/recipe-item.component.html","./src/app/recipe/recipe-list/recipe-list.component.ts","./src/app/recipe/recipe-list/recipe-list.component.html","./src/app/recipe/recipe-resolver.service.ts","./src/app/recipe/recipe-routing.module.ts","./src/app/recipe/recipe-start/recipe-start.component.ts","./src/app/recipe/recipe-start/recipe-start.component.html","./src/app/recipe/recipe.component.ts","./src/app/recipe/recipe.component.html","./src/app/recipe/recipe.module.ts","./src/app/recipe/recipe.service.ts","./src/app/recipe/store/recipe.action.ts","./src/app/recipe/store/recipe.effects.ts","./src/app/recipe/store/recipe.reducer.ts","./src/app/recipe/store/recipe.selectors.ts","./src/app/shared/alert/alert.component.ts","./src/app/shared/alert/alert.component.html","./src/app/shared/ingredients.model.ts","./src/app/shared/loading-spinner/loading-spinner.component.ts","./src/app/shared/shared.module.ts","./src/app/shopping-list/shopping-edit/shopping-edit.component.ts","./src/app/shopping-list/shopping-edit/shopping-edit.component.html","./src/app/shopping-list/shopping-list-routing.module.ts","./src/app/shopping-list/shopping-list.component.ts","./src/app/shopping-list/shopping-list.component.html","./src/app/shopping-list/shopping-list.module.ts","./src/app/shopping-list/store/shopping-list.action.ts","./src/app/shopping-list/store/shopping-list.reducer.ts","./src/app/store-root/index.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: '/recipes', pathMatch: 'full' },\r\n  {\r\n    path: 'recipes',\r\n    loadChildren: () =>\r\n      import('./recipe/recipe.module').then((m) => m.RecipeModule),\r\n  },\r\n  {\r\n    path: 'shopping-list',\r\n    loadChildren: () =>\r\n      import('./shopping-list/shopping-list.module').then(\r\n        (m) => m.ShoppingListModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'auth',\r\n    loadChildren: () => import('./auth/auth.module').then((m) => m.AuthModule),\r\n  },\r\n  {\r\n    path: '**',\r\n    loadChildren: () => import('./auth/auth.module').then((m) => m.AuthModule),\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes, {\r\n      preloadingStrategy: PreloadAllModules,\r\n      initialNavigation: 'enabledBlocking',\r\n    }),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { AppState } from './store-root/index';\nimport { Store } from '@ngrx/store';\n\nimport { AuthService } from './auth/auth.service';\nimport { Component, Inject, PLATFORM_ID } from '@angular/core';\nimport * as AuthActions from './auth/store/auth.actions';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  constructor(\n    private store: Store<AppState>,\n    @Inject(PLATFORM_ID) private platformId: any\n  ) {}\n\n  ngOnInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.store.dispatch(AuthActions.autoLogin());\n    }\n  }\n}\n","<app-header></app-header>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { RecipeEffects } from './recipe/store/recipe.effects';\nimport { reducers } from './store-root/index';\nimport { CoreModules } from './core.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ShoppingListModule } from './shopping-list/shopping-list.module';\nimport { RecipeModule } from './recipe/recipe.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AuthEffects } from './auth/store/auth.effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { environment } from 'src/environments/environment';\n\n@NgModule({\n  declarations: [AppComponent, HeaderComponent],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    HttpClientModule,\n    RecipeModule,\n    ShoppingListModule,\n    AuthModule,\n    CoreModules,\n    StoreModule.forRoot(reducers),\n    EffectsModule.forRoot([AuthEffects, RecipeEffects]),\n    StoreDevtoolsModule.instrument({ logOnly: environment.production }),\n    StoreRouterConnectingModule.forRoot(),\n  ],\n\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { AppState } from './../store-root/index';\r\nimport { Store } from '@ngrx/store';\r\nimport { AuthService } from './auth.service';\r\nimport {\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpParams,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { exhaustMap, take, map } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private store: Store<AppState>\r\n  ) {}\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    return this.store.select('auth').pipe(\r\n      take(1),\r\n      map((authState) => authState.user),\r\n      exhaustMap((user) => {\r\n        if (!user) {\r\n          return next.handle(req);\r\n        }\r\n        if (user.token) {\r\n          const modifiedReq = req.clone({\r\n            params: new HttpParams().set('auth', user.token),\r\n          });\r\n          return next.handle(modifiedReq);\r\n        }\r\n\r\n        return next.handle(req);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { AuthComponent } from './auth.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild([{ path: '', component: AuthComponent }])],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRouteModule {}\r\n","import { AppState } from './../store-root/index';\nimport { Store } from '@ngrx/store';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport * as AuthActions from './store/auth.actions';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css'],\n})\nexport class AuthComponent implements OnInit, OnDestroy {\n  isLoginMode: boolean = true;\n  isLoading: boolean = false;\n  error: string | null = null;\n  authForm!: FormGroup;\n  storeSub?: Subscription;\n\n  constructor(private store: Store<AppState>) {}\n\n  ngOnInit(): void {\n    this.initForm();\n    this.storeSub = this.store.select('auth').subscribe((authState) => {\n      (this.isLoading = authState.loading), (this.error = authState.authError);\n    });\n  }\n\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n\n  onSubmit() {\n    if (!this.authForm.valid) return;\n    const { email, password } = this.authForm.value;\n    if (this.isLoginMode) {\n      this.isLoading = true;\n      this.store.dispatch(AuthActions.loginStart({ email, password }));\n    } else {\n      this.isLoading = true;\n      this.store.dispatch(AuthActions.signupStart({ email, password }));\n    }\n\n    this.authForm.reset();\n  }\n\n  onHandleError() {\n    this.store.dispatch(AuthActions.clearError());\n  }\n\n  initForm() {\n    this.authForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(6),\n      ]),\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.storeSub?.unsubscribe();\n  }\n}\n","<div class=\"row justify-content-md-center mt-3\">\n  <div class=\"col-xs-12 col-md-6\">\n    <div *ngIf=\"isLoading\" class=\"text-center\">\n      <app-loading-spinner></app-loading-spinner>\n    </div>\n    <app-alert\n      [message]=\"error\"\n      *ngIf=\"error\"\n      (close)=\"onHandleError()\"\n    ></app-alert>\n    <form [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"!isLoading\">\n      <div class=\"form-group\">\n        <label for=\"email\"> E-mail </label\n        ><input type=\"email\" class=\"form-control\" formControlName=\"email\" />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"password\"> Password </label\n        ><input\n          type=\"password\"\n          class=\"form-control\"\n          formControlName=\"password\"\n        />\n      </div>\n      <div class=\"mt-2\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary me-2\"\n          [disabled]=\"!authForm.valid\"\n        >\n          {{ isLoginMode ? \"Login\" : \"Sign Up\" }}\n        </button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSwitchMode()\">\n          Switch to {{ isLoginMode ? \"Sign Up\" : \"Login\" }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { selectAuthUser } from './store/auth.selectors';\r\nimport { AppState } from './../store-root/index';\r\nimport { Store } from '@ngrx/store';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router, private store: Store<AppState>) {}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | boolean\r\n    | UrlTree\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree> {\r\n    const user = this.store.select(selectAuthUser);\r\n    if (!user) {\r\n      return this.router.createUrlTree(['/auth']);\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { SharedModule } from './../shared/shared.module';\r\nimport { AuthRouteModule } from './auth-routing.module';\r\nimport { AuthComponent } from './auth.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n  declarations: [AuthComponent],\r\n  imports: [CommonModule, ReactiveFormsModule, AuthRouteModule, SharedModule],\r\n})\r\nexport class AuthModule {}\r\n","import { AppState } from './../store-root/index';\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport * as AuthActions from './store/auth.actions';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n  timer?: ReturnType<typeof setTimeout> | null;\r\n\r\n  constructor(private store: Store<AppState>) {}\r\n\r\n  setLogoutTimer(expirationDuration: number) {\r\n    this.timer = setTimeout(() => {\r\n      this.store.dispatch(AuthActions.logout());\r\n    }, expirationDuration);\r\n  }\r\n\r\n  clearLogoutTimer() {\r\n    if (this.timer) {\r\n      clearTimeout(this.timer);\r\n      this.timer = null;\r\n    }\r\n  }\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\n\r\n//export const LOGOUT = '[Auth] Logout';\r\n//export const LOGIN_START = '[Auth] Login Start';\r\n//export const AUTHENTICATION_FAIL = '[Auth] Login fail';\r\n//export const SIGNUP_START = '[Auth] Signup Start';\r\n//export const CLEAR_ERROR = '[Auth] Clear Error';\r\n//export const AUTO_LOGIN = '[Auth] auto login';\r\n\r\n//export class AuthenticationSuccess implements Action {\r\n//  readonly type = AUTHENTICATION_SUCCESS;\r\n//  constructor(\r\n//    public payload: {\r\n//email: string;\r\n//token: string;\r\n//userId: string;\r\n//expirationDate: Date;\r\n//redirect: boolean;\r\n//    }\r\n//  ) {}\r\n//}\r\n\r\n//export class Logout implements Action {\r\n//  readonly type = LOGOUT;\r\n//}\r\n\r\n//export class LoginStart implements Action {\r\n//  readonly type = LOGIN_START;\r\n\r\n//  constructor(public payload: { email: string; password: string }) {}\r\n//}\r\n\r\n//export class AuthenticationFail implements Action {\r\n//  readonly type = AUTHENTICATION_FAIL;\r\n\r\n//  constructor(public payload: string) {}\r\n//}\r\n\r\n//export class SignupStart implements Action {\r\n//  readonly type = SIGNUP_START;\r\n\r\n//  constructor(public payload: { email: string; password: string }) {}\r\n//}\r\n\r\n//export class ClearError implements Action {\r\n//  readonly type = CLEAR_ERROR;\r\n//}\r\n\r\n//export class AutoLogin implements Action {\r\n//  readonly type = AUTO_LOGIN;\r\n//}\r\n\r\n//export type AuthActions =\r\n//  | AuthenticationSuccess\r\n//  | Logout\r\n//  | LoginStart\r\n//  | AuthenticationFail\r\n//  | SignupStart\r\n//  | ClearError\r\n//  | AutoLogin;\r\n\r\nexport const authenticationSuccess = createAction(\r\n  '[Auth] Login',\r\n  props<{\r\n    email: string;\r\n    token: string;\r\n    userId: string;\r\n    expirationDate: Date;\r\n    redirect: boolean;\r\n  }>()\r\n);\r\n\r\nexport const authenticationFail = createAction(\r\n  '[Auth] Login fail',\r\n  props<{ error: string }>()\r\n);\r\n\r\nexport const logout = createAction('[Auth] Logout');\r\n\r\nexport const loginStart = createAction(\r\n  '[Auth] Login start',\r\n  props<{ email: string; password: string }>()\r\n);\r\n\r\nexport const signupStart = createAction(\r\n  '[Auth] Signup start',\r\n  props<{ email: string; password: string }>()\r\n);\r\n\r\nexport const clearError = createAction('[Auth] Clear Error');\r\n\r\nexport const autoLogin = createAction('[Auth] Auto Login');\r\n","import { AuthService } from './../auth.service';\r\nimport { User } from './../user.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\r\nimport * as AuthActions from './auth.actions';\r\nimport { switchMap, catchError, map, of, Observable, tap } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nexport interface AuthResponseData {\r\n  kind: string;\r\n  idToken: string;\r\n  email: string;\r\n  refreshToken: string;\r\n  expiresIn: string;\r\n  localId: string;\r\n  registered?: string;\r\n}\r\n\r\nconst handleAuthentication = (resData: AuthResponseData) => {\r\n  const expirationDate = new Date(\r\n    new Date().getTime() + +resData.expiresIn * 1000\r\n  );\r\n  const user = new User(\r\n    resData.email,\r\n    resData.localId,\r\n    resData.idToken,\r\n    expirationDate\r\n  );\r\n  localStorage.setItem('userData', JSON.stringify(user));\r\n  return AuthActions.authenticationSuccess({\r\n    email: resData.email,\r\n    userId: resData.localId,\r\n    token: resData.idToken,\r\n    expirationDate: expirationDate,\r\n    redirect: true,\r\n  });\r\n};\r\n\r\nconst handleError = (errorRes: HttpErrorResponse) => {\r\n  let errorMsg = 'An Unknown Error occurred!';\r\n  if (!errorRes.error || !errorRes.error.error) {\r\n    return of(AuthActions.authenticationFail({ error: errorMsg }));\r\n  }\r\n\r\n  switch (errorRes.error.error.message) {\r\n    case 'EMAIL_EXISTS':\r\n      errorMsg = 'This email exists already!';\r\n      break;\r\n    case 'INVALID_PASSWORD':\r\n      errorMsg = 'Credentials are incorrect!';\r\n      break;\r\n    case 'USER_DISABLED':\r\n      errorMsg = 'Invalid account: account has been deleted!';\r\n      break;\r\n  }\r\n  return of(AuthActions.authenticationFail({ error: errorMsg }));\r\n};\r\n\r\n@Injectable()\r\nexport class AuthEffects {\r\n  authSignUp$ = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(AuthActions.signupStart),\r\n      switchMap((signupAction) => {\r\n        return this.http\r\n          .post<AuthResponseData>(\r\n            `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${environment.api}`,\r\n            {\r\n              email: signupAction.email,\r\n              password: signupAction.password,\r\n              returnSecureToken: true,\r\n            }\r\n          )\r\n          .pipe(\r\n            tap((resData) => {\r\n              this.authService.setLogoutTimer(+resData.expiresIn * 1000);\r\n            }),\r\n            map((resData) => {\r\n              return handleAuthentication(resData);\r\n            }),\r\n\r\n            catchError((errorRes) => {\r\n              return handleError(errorRes);\r\n            })\r\n          );\r\n      })\r\n    );\r\n  });\r\n\r\n  authLogin$ = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(AuthActions.loginStart),\r\n      switchMap((authData) => {\r\n        return this.http\r\n          .post<AuthResponseData>(\r\n            `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${environment.api}`,\r\n            {\r\n              email: authData.email,\r\n              password: authData.password,\r\n              returnSecureToken: true,\r\n            }\r\n          )\r\n          .pipe(\r\n            tap((resData) => {\r\n              this.authService.setLogoutTimer(+resData.expiresIn * 1000);\r\n            }),\r\n            map((resData) => {\r\n              return handleAuthentication(resData);\r\n            }),\r\n\r\n            catchError((errorRes) => {\r\n              return handleError(errorRes);\r\n            })\r\n          );\r\n      })\r\n    );\r\n  });\r\n\r\n  authRedirect$ = createEffect(\r\n    () => {\r\n      return this.actions$.pipe(\r\n        ofType(AuthActions.authenticationSuccess),\r\n        tap((authSuccessAction) => {\r\n          if (authSuccessAction.redirect) {\r\n            this.router.navigate(['/recipes']);\r\n          }\r\n        })\r\n      );\r\n    },\r\n    { dispatch: false }\r\n  );\r\n\r\n  autoLogin$ = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(AuthActions.autoLogin),\r\n\r\n      map(() => {\r\n        const userStringData = localStorage.getItem('userData');\r\n        if (!userStringData) {\r\n          return { type: 'DUMMY' };\r\n        }\r\n        const userData: {\r\n          email: string;\r\n          id: string;\r\n          _token: string;\r\n          _tokenExpirationDate: string;\r\n        } = JSON.parse(userStringData);\r\n\r\n        const loadedUser = new User(\r\n          userData.email,\r\n          userData.id,\r\n          userData._token,\r\n          new Date(userData._tokenExpirationDate)\r\n        );\r\n        if (loadedUser.token) {\r\n          const expirationDuration =\r\n            new Date(userData._tokenExpirationDate).getTime() -\r\n            new Date().getTime();\r\n\r\n          this.authService.setLogoutTimer(expirationDuration);\r\n          return AuthActions.authenticationSuccess({\r\n            email: loadedUser.email,\r\n            userId: loadedUser.id,\r\n            token: loadedUser.token,\r\n            expirationDate: new Date(userData._tokenExpirationDate),\r\n            redirect: false,\r\n          });\r\n        }\r\n        return { type: 'DUMMY' };\r\n      })\r\n    );\r\n  });\r\n\r\n  authLogout$ = createEffect(\r\n    () => {\r\n      return this.actions$.pipe(\r\n        ofType(AuthActions.logout),\r\n        tap(() => {\r\n          this.authService.clearLogoutTimer();\r\n          localStorage.removeItem('userData');\r\n          this.router.navigate(['/auth']);\r\n        })\r\n      );\r\n    },\r\n    { dispatch: false }\r\n  );\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n}\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport { User } from '../user.model';\r\nimport * as AuthActions from './auth.actions';\r\n\r\nexport interface authState {\r\n  user: User | null;\r\n  authError: string | null;\r\n  loading: boolean;\r\n}\r\n\r\nconst initialState: authState = {\r\n  user: null,\r\n  authError: null,\r\n  loading: false,\r\n};\r\n\r\nexport const authReducer = createReducer(\r\n  initialState,\r\n  on(\r\n    AuthActions.authenticationSuccess,\r\n    (state, { email, userId, token, expirationDate }) => {\r\n      const user = new User(email, userId, token, expirationDate);\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n        user,\r\n        loading: false,\r\n      };\r\n    }\r\n  ),\r\n  on(AuthActions.logout, (state) => ({ ...state, user: null })),\r\n  on(AuthActions.loginStart, (state) => ({\r\n    ...state,\r\n    authError: null,\r\n    loading: true,\r\n  })),\r\n  on(AuthActions.signupStart, (state) => ({\r\n    ...state,\r\n    authError: null,\r\n    loading: true,\r\n  })),\r\n  on(AuthActions.authenticationFail, (state, { error }) => ({\r\n    ...state,\r\n    user: null,\r\n    authError: error,\r\n    loading: false,\r\n  })),\r\n  on(AuthActions.clearError, (state) => ({ ...state, authError: null }))\r\n);\r\n","import { createSelector } from '@ngrx/store';\r\nimport { AppState } from 'src/app/store-root';\r\nimport { authState } from './auth.reducer';\r\n\r\nexport const selectAuth = (state: AppState) => state.auth;\r\n\r\nexport const selectAuthUser = createSelector(\r\n  selectAuth,\r\n  (state: authState) => state.user\r\n);\r\n","export class User {\r\n  constructor(\r\n    public email: string,\r\n    public id: string,\r\n    private _token: string | null,\r\n    private _tokenExpirationDate: Date\r\n  ) {}\r\n\r\n  get token() {\r\n    if (!this._tokenExpirationDate || new Date() > this._tokenExpirationDate) {\r\n      return null;\r\n    }\r\n    return this._token;\r\n  }\r\n}\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { AuthInterceptorService } from './auth/auth-interceptor.service';\r\nimport { RecipeService } from './recipe/recipe.service';\r\n\r\n@NgModule({\r\n  providers: [\r\n    RecipeService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptorService,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class CoreModules {}\r\n","import { AppState } from './../store-root/index';\nimport { Store } from '@ngrx/store';\nimport { Subscription, map } from 'rxjs';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport * as AuthActions from './../auth/store/auth.actions';\nimport * as RecipesActions from '../recipe/store/recipe.action';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  isAuth = false;\n  userSub!: Subscription;\n  constructor(private store: Store<AppState>) {}\n\n  ngOnInit(): void {\n    this.userSub = this.store\n      .select('auth')\n      .pipe(map((authState) => authState.user))\n      .subscribe((user) => {\n        this.isAuth = !!user;\n      });\n  }\n\n  onSaveData() {\n    this.store.dispatch(RecipesActions.storeRecipes());\n  }\n\n  onFetchData() {\n    this.store.dispatch(RecipesActions.fetchRecipes());\n  }\n\n  onLogout() {\n    this.store.dispatch(AuthActions.logout());\n  }\n\n  ngOnDestroy(): void {\n    this.userSub!.unsubscribe();\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container-fluid\">\n    <a style=\"cursor: pointer\" class=\"navbar-brand mb-0 h1\">Recipe Book</a>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-bs-toggle=\"collapse\"\n      data-bs-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0 me-auto mb-2 mb-lg-0\">\n        <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"isAuth\">\n          <a class=\"nav-link\" [routerLink]=\"['recipes']\">Recipe</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"!isAuth\">\n          <a class=\"nav-link\" [routerLink]=\"['auth']\">Authentication</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/shopping-list\">Shopping List</a>\n        </li>\n      </ul>\n      <ul class=\"nav navbar-nav navbar-right\">\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            style=\"cursor: pointer\"\n            *ngIf=\"isAuth\"\n            (click)=\"onLogout()\"\n            >Logout</a\n          >\n        </li>\n        <li class=\"dropdown\" *ngIf=\"isAuth\">\n          <a\n            class=\"nav-link dropdown-toggle\"\n            style=\"cursor: pointer\"\n            id=\"navbarDropdown\"\n            role=\"button\"\n            data-bs-toggle=\"dropdown\"\n            aria-expanded=\"false\"\n          >\n            Manage\n          </a>\n          <ul class=\"dropdown-menu w-50 p-2\" aria-labelledby=\"navbarDropdown \">\n            <li class=\"border-bottom\">\n              <a\n                class=\"dropdown-item nav-link\"\n                style=\"cursor: pointer\"\n                (click)=\"onSaveData()\"\n                >Save Data</a\n              >\n            </li>\n            <li>\n              <a\n                class=\"dropdown-item nav-link\"\n                style=\"cursor: pointer\"\n                (click)=\"onFetchData()\"\n                >Fetch Data</a\n              >\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { AppState } from './../../store-root/index';\nimport { Store } from '@ngrx/store';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { RecipeModel } from '../recipe.model';\nimport { map, tap } from 'rxjs';\nimport * as RecipeActions from './../store/recipe.action';\nimport * as ShoppingListActions from './../../shopping-list/store/shopping-list.action';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.css'],\n})\nexport class RecipeDetailComponent implements OnInit {\n  recipe?: RecipeModel;\n  id!: number;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private store: Store<AppState>\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.id = +params['id'];\n      this.store\n        .select('recipes')\n        .pipe(\n          map((recipeState) =>\n            recipeState.recipes.find((recipe, index) => index === this.id)\n          ),\n          tap((recipe) => {\n            if (!recipe) {\n              this.router.navigate(['recipes']);\n            }\n          })\n        )\n        .subscribe((recipe) => {\n          this.recipe = recipe;\n        });\n    });\n  }\n\n  onAddToShoppingList() {\n    if (this.recipe) {\n      this.store.dispatch(\n        ShoppingListActions.addIngredients({\n          ingredients: this.recipe.ingredients,\n        })\n      );\n    }\n  }\n\n  onAddRecipe() {\n    this.router.navigate(['edit'], { relativeTo: this.route });\n  }\n\n  onDeleteRecipe() {\n    this.store.dispatch(RecipeActions.deleteRecipe({ selectedIndex: this.id }));\n    this.router.navigate(['/recipes']);\n  }\n}\n","<div class=\"row\" *ngIf=\"recipe\">\n  <div class=\"col-xs-12\">\n    <img\n      [src]=\"recipe.imagePath\"\n      alt=\"{{ recipe.name }}\"\n      class=\"image-fluid\"\n      style=\"max-height: 300px\"\n    />\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"recipe\">\n  <div class=\"col-xs-12\">\n    <h1>{{ recipe.name }}</h1>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <div class=\"btn-group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-primary dropdown-toggle\"\n        data-bs-toggle=\"dropdown\"\n      >\n        > Manage Recipe <span class=\"caret\"> </span>\n      </button>\n      <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n        <li>\n          <a\n            class=\"dropdown-item\"\n            style=\"cursor: pointer\"\n            (click)=\"onAddToShoppingList()\"\n            >To Shopping list</a\n          >\n        </li>\n        <li>\n          <a\n            class=\"dropdown-item\"\n            style=\"cursor: pointer\"\n            (click)=\"onAddRecipe()\"\n            >Edit Recipe</a\n          >\n        </li>\n        <li>\n          <a\n            class=\"dropdown-item\"\n            style=\"cursor: pointer\"\n            (click)=\"onDeleteRecipe()\"\n            >Delete Recipe</a\n          >\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"recipe\">\n  <div class=\"col-xs-12\">{{ recipe.description }}</div>\n</div>\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <ul class=\"list-group\" *ngIf=\"recipe\">\n      <li class=\"list-group-item\" *ngFor=\"let ingredient of recipe.ingredients\">\n        {{ ingredient.name }} - {{ ingredient.amount }}\n      </li>\n    </ul>\n  </div>\n</div>\n","import { Store } from '@ngrx/store';\nimport { map, Subscription, tap } from 'rxjs';\nimport { RecipeService } from './../recipe.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AppState } from 'src/app/store-root';\nimport * as RecipeActions from './../store/recipe.action';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css'],\n})\nexport class RecipeEditComponent implements OnInit, OnDestroy {\n  id!: number;\n  editMode = false;\n  recipeForm!: FormGroup;\n  private storeSub?: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private recipeService: RecipeService,\n    private router: Router,\n    private store: Store<AppState>\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.id = +params['id'];\n      this.editMode = params['id'] != null;\n      this.initForm();\n      this.store\n        .select('recipes')\n        .pipe(\n          tap((recipeState) => {\n            if (this.id >= recipeState.recipes.length) {\n              this.router.navigate(['recipes']);\n            }\n          })\n        )\n        .subscribe();\n    });\n  }\n\n  get recipeFormGroup() {\n    return this.recipeForm?.get('ingredients') as FormArray;\n  }\n\n  onSubmit() {\n    if (this.editMode) {\n      //this.recipeService.updateRecipe(this.id, this.recipeForm?.value);\n      this.store.dispatch(\n        RecipeActions.updateRecipe({\n          index: this.id,\n          newRecipe: this.recipeForm.value,\n        })\n      );\n    } else {\n      //this.recipeService.addRecipe(this.recipeForm?.value);\n      this.store.dispatch(RecipeActions.addRecipe(this.recipeForm.value));\n    }\n    this.onCancel();\n  }\n\n  onAddIngredient() {\n    this.recipeFormGroup.push(\n      new FormGroup({\n        name: new FormControl(null, Validators.required),\n        amount: new FormControl(null, [\n          Validators.required,\n          Validators.pattern(/^[1-9]+[0-9]*$/),\n        ]),\n      })\n    );\n  }\n\n  private initForm() {\n    let recipeName = '';\n    let recipeImagePath = '';\n    let recipeDescription = '';\n    let recipeIngredients = new FormArray<any>([]);\n    if (this.editMode) {\n      //const recipe = this.recipeService.getRecipeById(this.id);\n      this.storeSub = this.store\n        .select('recipes')\n        .pipe(\n          map((recipeState) =>\n            recipeState.recipes.find((recipe, index) => index === this.id)\n          )\n        )\n        .subscribe((recipe) => {\n          if (recipe) {\n            recipeName = recipe.name;\n            recipeImagePath = recipe.imagePath;\n            recipeDescription = recipe.description;\n            if (recipe['ingredients']) {\n              for (let ingredient of recipe.ingredients) {\n                recipeIngredients.push(\n                  new FormGroup({\n                    name: new FormControl(ingredient.name, Validators.required),\n                    amount: new FormControl(ingredient.amount, [\n                      Validators.required,\n                      Validators.pattern(/^[1-9]+[0-9]*$/),\n                    ]),\n                  })\n                );\n              }\n            }\n          }\n        });\n    }\n    this.recipeForm = new FormGroup({\n      name: new FormControl(recipeName, Validators.required),\n      imagePath: new FormControl(recipeImagePath, Validators.required),\n      description: new FormControl(recipeDescription, Validators.required),\n      ingredients: recipeIngredients,\n    });\n  }\n\n  onCancel() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  onDeleteIngredient(index: number) {\n    this.recipeFormGroup.removeAt(index);\n  }\n\n  ngOnDestroy(): void {\n    if (this.storeSub) this.storeSub.unsubscribe();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <form [formGroup]=\"recipeForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-success m-1\"\n            [disabled]=\"!recipeForm.valid\"\n          >\n            Save\n          </button>\n          <button type=\"button\" class=\"btn btn-danger\" (click)=\"onCancel()\">\n            Cancel\n          </button>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"name\" class=\"form-label\">Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              class=\"form-control\"\n              formControlName=\"name\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"imagePath\" class=\"form-label\">Image URL</label>\n            <input\n              type=\"text\"\n              id=\"imagePath\"\n              class=\"form-control\"\n              formControlName=\"imagePath\"\n              #imagePath\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <img [src]=\"imagePath.value\" alt=\"\" class=\"img-fluid\" />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"description\" class=\"form-label\">Description</label>\n            <textarea\n              type=\"text\"\n              id=\"description\"\n              class=\"form-control\"\n              rows=\"6\"\n              formControlName=\"description\"\n            ></textarea>\n          </div>\n        </div>\n      </div>\n      <div class=\"row mt-3\">\n        <div class=\"col-xs-12\" formArrayName=\"ingredients\">\n          <div\n            class=\"row g-4 mb-2\"\n            *ngFor=\"\n              let ingredientCtrl of recipeFormGroup.controls;\n              let i = index\n            \"\n            [formGroupName]=\"i\"\n          >\n            <div class=\"col-md-8\">\n              <input type=\"text\" class=\"form-control\" formControlName=\"name\" />\n            </div>\n            <div class=\"col col-md-2\">\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                formControlName=\"amount\"\n              />\n            </div>\n            <div class=\"col col-md-2\">\n              <button\n                type=\"button\"\n                class=\"btn btn-danger\"\n                (click)=\"onDeleteIngredient(i)\"\n              >\n                X\n              </button>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-xs-12\">\n              <button\n                type=\"button\"\n                class=\"btn btn-success\"\n                (click)=\"onAddIngredient()\"\n              >\n                Add Ingredient\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { RecipeModel } from '../../recipe.model';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css'],\n})\nexport class RecipeItemComponent implements OnInit {\n  @Input()\n  recipe!: RecipeModel;\n  @Input() index!: number;\n\n  ngOnInit(): void {}\n}\n","<a\n  class=\"list-group-item list-group list-group-item-action clearfix p-2 mt-1 border\"\n  style=\"cursor: pointer\"\n  [routerLink]=\"[index]\"\n  routerLinkActive=\"active\"\n>\n  <div class=\"float-start\">\n    <h4 class=\"list-group-item-heading\">{{ recipe.name }}</h4>\n    <p class=\"list-group-item-text\">{{ recipe.description }}</p>\n  </div>\n  <span class=\"float-end\">\n    <img\n      [src]=\"recipe.imagePath\"\n      alt=\"{{ recipe.name }}\"\n      class=\"img-fluid rounded float-start\"\n      style=\"max-width: 70px\"\n    />\n  </span>\n</a>\n","import { Store } from '@ngrx/store';\nimport { Subscription, map } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { RecipeModel } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\nimport { AppState } from 'src/app/store-root';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css'],\n})\nexport class RecipeListComponent implements OnInit, OnDestroy {\n  recipes?: RecipeModel[];\n  subscription?: Subscription;\n\n  constructor(\n    private recipeService: RecipeService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private store: Store<AppState>\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription = this.store\n      .select('recipes')\n      .pipe(map((recipeState) => recipeState.recipes))\n      .subscribe((recipes: RecipeModel[]) => {\n        this.recipes = recipes;\n      });\n  }\n\n  onNewRecipe() {\n    this.router.navigate(['new'], { relativeTo: this.route });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","<div class=\"row mt-3\">\n  <div class=\"col-xs-12\">\n    <button class=\"btn btn-success\" (click)=\"onNewRecipe()\">New Recipe</button>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <app-recipe-item\n      *ngFor=\"let recipeItem of recipes; let i = index\"\n      [recipe]=\"recipeItem\"\n      [index]=\"i\"\n    ></app-recipe-item>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\r\nimport { take, map, switchMap, of } from 'rxjs';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { Store } from '@ngrx/store';\r\nimport { RecipeModel } from './recipe.model';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  Resolve,\r\n  RouterStateSnapshot,\r\n  ActivatedRouteSnapshot,\r\n} from '@angular/router';\r\nimport * as RecipesActions from './store/recipe.action';\r\nimport { AppState } from '../store-root';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RecipeResolverService implements Resolve<RecipeModel[]> {\r\n  constructor(\r\n    private store: Store<AppState>,\r\n    private action$: Actions,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    return this.store.select('recipes').pipe(\r\n      take(1),\r\n      map((recipeState) => {\r\n        return recipeState.recipes;\r\n      }),\r\n      switchMap((recipes) => {\r\n        if (recipes.length === 0) {\r\n          this.store.dispatch(RecipesActions.fetchRecipes());\r\n          return this.action$.pipe(\r\n            ofType(RecipesActions.setRecipes),\r\n            switchMap(() => {\r\n              return this.http.get<RecipeModel[]>(\r\n                'https://ng-shop-recipe-90217-default-rtdb.firebaseio.com/recipes.json'\r\n              );\r\n            }),\r\n            take(1)\r\n          );\r\n        } else {\r\n          return of(recipes);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { AuthGuard } from '../auth/auth.guard';\r\nimport { RecipeDetailComponent } from './recipe-detail/recipe-detail.component';\r\nimport { RecipeEditComponent } from './recipe-edit/recipe-edit.component';\r\nimport { RecipeResolverService } from './recipe-resolver.service';\r\nimport { RecipeStartComponent } from './recipe-start/recipe-start.component';\r\nimport { RecipeComponent } from './recipe.component';\r\n\r\nconst recipeRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RecipeComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: RecipeStartComponent,\r\n      },\r\n      {\r\n        path: 'new',\r\n        component: RecipeEditComponent,\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: RecipeDetailComponent,\r\n        resolve: [RecipeResolverService],\r\n      },\r\n\r\n      {\r\n        path: ':id/edit',\r\n        resolve: [RecipeResolverService],\r\n        component: RecipeEditComponent,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(recipeRoutes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RecipeRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.css']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>Please select a Recipe!</h3>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe',\n  templateUrl: './recipe.component.html',\n  styleUrls: ['./recipe.component.css'],\n})\nexport class RecipeComponent implements OnInit {\n  ngOnInit(): void {}\n}\n","<div class=\"row\">\n  <div class=\"col-md-12 col-lg-6 mb-md-2\">\n    <app-recipe-list></app-recipe-list>\n  </div>\n  <div class=\"col-md-12 col-lg-6 mt-2\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { SharedModule } from './../shared/shared.module';\r\nimport { RecipeRoutingModule } from './recipe-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RecipeDetailComponent } from './recipe-detail/recipe-detail.component';\r\nimport { RecipeEditComponent } from './recipe-edit/recipe-edit.component';\r\nimport { RecipeItemComponent } from './recipe-list/recipe-item/recipe-item.component';\r\nimport { RecipeListComponent } from './recipe-list/recipe-list.component';\r\nimport { RecipeStartComponent } from './recipe-start/recipe-start.component';\r\nimport { RecipeComponent } from './recipe.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RecipeDetailComponent,\r\n    RecipeStartComponent,\r\n    RecipeEditComponent,\r\n    RecipeComponent,\r\n    RecipeListComponent,\r\n    RecipeItemComponent,\r\n  ],\r\n  imports: [SharedModule, ReactiveFormsModule, RecipeRoutingModule],\r\n})\r\nexport class RecipeModule {}\r\n","import { AppState } from '../store-root/index';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { IngredientsModel } from '../shared/ingredients.model';\r\nimport { RecipeModel } from './recipe.model';\r\nimport * as ShoppingListActions from '../shopping-list/store/shopping-list.action';\r\nimport * as RecipeActions from './store/recipe.action';\r\n\r\n@Injectable()\r\nexport class RecipeService {\r\n  constructor(private store: Store<AppState>) {}\r\n\r\n  getRecipe() {\r\n    this.store.dispatch(RecipeActions.fetchRecipes());\r\n  }\r\n\r\n  addIngredientsToShoppingList(ingredients: IngredientsModel[]) {\r\n    this.store.dispatch(\r\n      ShoppingListActions.addIngredients({ ingredients: ingredients })\r\n    );\r\n  }\r\n}\r\n","import { RecipeModel } from './../recipe.model';\r\nimport { createAction, props } from '@ngrx/store';\r\n\r\nexport const setRecipes = createAction(\r\n  '[Recipes] Set recipes',\r\n  props<{ recipes: RecipeModel[] }>()\r\n);\r\nexport const fetchRecipes = createAction('[Recipes] Fetch recipes');\r\nexport const addRecipe = createAction(\r\n  '[Recipes] Add recipe',\r\n  props<{ recipe: RecipeModel }>()\r\n);\r\nexport const updateRecipe = createAction(\r\n  '[Recipes] Update recipes',\r\n  props<{ index: number; newRecipe: RecipeModel }>()\r\n);\r\nexport const deleteRecipe = createAction(\r\n  '[Recipes] Delete Recipe',\r\n  props<{ selectedIndex: number }>()\r\n);\r\nexport const storeRecipes = createAction('[Recipes] Store Recipes');\r\n","import { selectRecipes } from './recipe.selectors';\r\nimport { AppState } from './../../store-root/index';\r\nimport { Store } from '@ngrx/store';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RecipeModel } from './../recipe.model';\r\nimport { switchMap, map, withLatestFrom } from 'rxjs';\r\n\r\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\r\nimport * as RecipesActions from './recipe.action';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class RecipeEffects {\r\n  storeRecipe$ = createEffect(\r\n    () => {\r\n      return this.action$.pipe(\r\n        ofType(RecipesActions.storeRecipes),\r\n        withLatestFrom(this.store.select(selectRecipes)),\r\n        switchMap((recipes) => {\r\n          return this.http.put(\r\n            'https://ng-shop-recipe-90217-default-rtdb.firebaseio.com/recipes.json',\r\n            recipes\r\n          );\r\n        })\r\n      );\r\n    },\r\n    { dispatch: false }\r\n  );\r\n\r\n  fetchRecipes$ = createEffect(() => {\r\n    return this.action$.pipe(\r\n      ofType(RecipesActions.fetchRecipes),\r\n      switchMap(() => {\r\n        return this.http.get<RecipeModel[]>(\r\n          'https://ng-shop-recipe-90217-default-rtdb.firebaseio.com/recipes.json'\r\n        );\r\n      }),\r\n      map((recipes) => {\r\n        return recipes.map((recipe) => {\r\n          return {\r\n            ...recipe,\r\n            ingredients: recipe.ingredients ? recipe.ingredients : [],\r\n          };\r\n        });\r\n      }),\r\n      map((recipes) => {\r\n        return RecipesActions.setRecipes({ recipes });\r\n      })\r\n    );\r\n  });\r\n  constructor(\r\n    private action$: Actions,\r\n    private http: HttpClient,\r\n    private store: Store<AppState>\r\n  ) {}\r\n}\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport { RecipeModel } from './../recipe.model';\r\nimport * as RecipeActions from './recipe.action';\r\n\r\nexport interface recipeState {\r\n  recipes: RecipeModel[];\r\n}\r\n\r\nconst initialState: recipeState = {\r\n  recipes: [],\r\n};\r\n\r\nexport const recipeReducer = createReducer(\r\n  initialState,\r\n  on(RecipeActions.setRecipes, (state, { recipes }) => {\r\n    return {\r\n      ...state,\r\n      recipes: [...recipes],\r\n    };\r\n  }),\r\n  on(RecipeActions.addRecipe, (state, { recipe }) => {\r\n    return {\r\n      ...state,\r\n      recipes: [...state.recipes, recipe],\r\n    };\r\n  }),\r\n  on(RecipeActions.updateRecipe, (state, { index, newRecipe }) => {\r\n    const updatedRecipe = {\r\n      ...state.recipes[index],\r\n      ...newRecipe,\r\n    };\r\n    const updatedRecipes = [...state.recipes];\r\n    updatedRecipes[index] = updatedRecipe;\r\n    return {\r\n      ...state,\r\n      recipes: [...updatedRecipes],\r\n    };\r\n  }),\r\n  on(RecipeActions.deleteRecipe, (state, { selectedIndex }) => {\r\n    return {\r\n      ...state,\r\n      recipes: state.recipes.filter((_, index) => {\r\n        return index !== selectedIndex;\r\n      }),\r\n    };\r\n  })\r\n);\r\n","import { createSelector } from '@ngrx/store';\r\nimport { AppState } from 'src/app/store-root';\r\n\r\nexport const appState = (state: AppState) => state;\r\n\r\nexport const selectRecipes = createSelector(\r\n  appState,\r\n  (state: AppState) => state.recipes\r\n);\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-alert',\r\n  templateUrl: './alert.component.html',\r\n  styleUrls: ['./alert.component.css'],\r\n})\r\nexport class AlertComponent {\r\n  @Input() message?: string | null;\r\n  @Output() close = new EventEmitter<void>();\r\n\r\n  onClose() {\r\n    this.close.emit();\r\n  }\r\n}\r\n","<div class=\"backdrop\" (click)=\"onClose()\">\r\n  <div class=\"alert-box\">\r\n    <p>{{ message }}</p>\r\n    <div class=\"alert-box-actions\">\r\n      <button class=\"btn btn-primary\" (click)=\"onClose()\">Close</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export class IngredientsModel {\r\n  constructor(public name: string, public amount: number) {}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loading-spinner',\r\n  template:\r\n    '<div class=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>',\r\n  styleUrls: ['./loading-spinner.css'],\r\n})\r\nexport class LoadingSpinnerComponent {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { AlertComponent } from './alert/alert.component';\r\nimport { LoadingSpinnerComponent } from './loading-spinner/loading-spinner.component';\r\n\r\n@NgModule({\r\n  declarations: [LoadingSpinnerComponent, AlertComponent],\r\n  imports: [CommonModule],\r\n  exports: [LoadingSpinnerComponent, AlertComponent, CommonModule],\r\n})\r\nexport class SharedModule {}\r\n","import { AppState } from '../../store-root/index';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { IngredientsModel } from 'src/app/shared/ingredients.model';\nimport * as ShoppingListActions from '../store/shopping-list.action';\n\n@Component({\n  selector: 'app-shopping-edit',\n  templateUrl: './shopping-edit.component.html',\n  styleUrls: ['./shopping-edit.component.css'],\n})\nexport class ShoppingEditComponent implements OnInit, OnDestroy {\n  @ViewChild('f', { static: false }) slForm!: NgForm;\n  subscription?: Subscription;\n  editMode = false;\n  editedItemsIndex!: number;\n  editedItem: IngredientsModel | null = null;\n  constructor(private store: Store<AppState>) {}\n\n  ngOnInit(): void {\n    this.subscription = this.store\n      .select('shoppingList')\n      .subscribe((stateData) => {\n        if (stateData.editedItemsIndex > -1) {\n          this.editMode = true;\n          this.editedItem = stateData.editedIngredient;\n          this.slForm.setValue({\n            name: this.editedItem!.name,\n            amount: this.editedItem!.amount,\n          });\n        } else {\n          this.editMode = false;\n        }\n      });\n  }\n  onSubmit(form: NgForm) {\n    const value = form.value;\n    const newIngredient = new IngredientsModel(value.name, value.amount);\n    if (this.editMode) {\n      this.store.dispatch(\n        ShoppingListActions.updateIngredient({ ingredient: newIngredient })\n      );\n    } else {\n      this.store.dispatch(\n        ShoppingListActions.addIngredient({ ingredient: newIngredient })\n      );\n    }\n    form.reset();\n    this.editMode = false;\n  }\n\n  onClear() {\n    this.slForm.reset();\n    this.editMode = false;\n    this.store.dispatch(ShoppingListActions.stopEdit());\n  }\n\n  onDelete() {\n    this.store.dispatch(ShoppingListActions.deleteIngredient());\n    this.onClear();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n    this.store.dispatch(ShoppingListActions.stopEdit());\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <form class=\"row g-2\" (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\n      <div class=\"col-sm-5 form-group\">\n        <label for=\"name\">Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          class=\"form-control\"\n          name=\"name\"\n          ngModel\n          required\n        />\n      </div>\n      <div class=\"col-sm-2 form-group\">\n        <label for=\"amount\">Amount</label>\n        <input\n          type=\"number\"\n          id=\"amount\"\n          class=\"form-control\"\n          name=\"amount\"\n          ngModel\n          required\n          pattern=\"^[1-9]+[0-9]*$\"\n        />\n      </div>\n      <div class=\"row g-2\">\n        <div class=\"col-xs-12\">\n          <button\n            class=\"btn btn-success me-2\"\n            type=\"submit\"\n            [disabled]=\"!f.valid\"\n          >\n            {{ editMode ? \"Update\" : \"Add\" }}\n          </button>\n          <button\n            class=\"btn btn-danger me-2\"\n            type=\"button\"\n            (click)=\"onDelete()\"\n            *ngIf=\"editMode\"\n          >\n            Delete\n          </button>\n          <button\n            class=\"btn btn-primary me-2\"\n            type=\"button\"\n            (click)=\"onClear()\"\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { ShoppingListComponent } from './shopping-list.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst shoppingListRoutes: Routes = [\r\n  { path: '', component: ShoppingListComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(shoppingListRoutes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ShoppingListRoutingModule {}\r\n","import { AppState } from '../store-root/index';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { IngredientsModel } from '../shared/ingredients.model';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport * as ShoppingListActions from './store/shopping-list.action';\n\n@Component({\n  selector: 'app-shopping-list',\n  templateUrl: './shopping-list.component.html',\n  styleUrls: ['./shopping-list.component.css'],\n})\nexport class ShoppingListComponent implements OnInit {\n  ingredients?: Observable<{ ingredients: IngredientsModel[] }>;\n\n  constructor(private store: Store<AppState>) {}\n\n  ngOnInit(): void {\n    this.ingredients = this.store.select('shoppingList');\n  }\n\n  onEditItem(index: number) {\n    this.store.dispatch(\n      ShoppingListActions.startEdit({ selectedIndex: index })\n    );\n  }\n}\n","<div class=\"row g-3\">\n  <div class=\"col-xs-10\">\n    <app-shopping-edit></app-shopping-edit>\n  </div>\n\n  <div class=\"list-group\">\n    <a\n      class=\"list-group-item list-group-item-action\"\n      style=\"cursor: pointer\"\n      *ngFor=\"\n        let ingredient of (ingredients | async)?.ingredients;\n        let i = index\n      \"\n      (click)=\"onEditItem(i)\"\n      >{{ ingredient.name }} {{ ingredient.amount }}</a\n    >\n  </div>\n</div>\n","import { SharedModule } from './../shared/shared.module';\r\nimport { ShoppingListRoutingModule } from './shopping-list-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { ShoppingEditComponent } from './shopping-edit/shopping-edit.component';\r\nimport { ShoppingListComponent } from './shopping-list.component';\r\n\r\n@NgModule({\r\n  declarations: [ShoppingListComponent, ShoppingEditComponent],\r\n  imports: [SharedModule, FormsModule, ShoppingListRoutingModule],\r\n})\r\nexport class ShoppingListModule {}\r\n","import { IngredientsModel } from './../../shared/ingredients.model';\r\nimport { Action, createAction, props } from '@ngrx/store';\r\n\r\n//export const ADD_INGREDIENT = '[Shopping List] Add Ingredient';\r\n//export const ADD_INGREDIENTS = '[Shopping List] Add ingredients';\r\n//export const DELETE_INGREDIENTS = '[Shopping List] Delete Ingredients';\r\n//export const UPDATE_INGREDIENTS = '[Shopping List] Update Ingredients';\r\n//export const START_EDIT = '[Shopping List] Start Edit';\r\n//export const STOP_EDIT = '[Shopping List] Stop Edit';\r\n\r\n//export class AddIngredient implements Action {\r\n//  readonly type = ADD_INGREDIENT;\r\n\r\n//  constructor(public payload: IngredientsModel) {}\r\n//}\r\n\r\n//export class AddIngredients implements Action {\r\n//  readonly type = ADD_INGREDIENTS;\r\n\r\n//  constructor(public payload: IngredientsModel[]) {}\r\n//}\r\n\r\n//export class UpdateIngredients implements Action {\r\n//  readonly type = UPDATE_INGREDIENTS;\r\n\r\n//  constructor(public payload: IngredientsModel) {}\r\n//}\r\n\r\n//export class DeleteIngredients implements Action {\r\n//  readonly type = DELETE_INGREDIENTS;\r\n\r\n//  //constructor(public payload: number) {}\r\n//  constructor() {}\r\n//}\r\n\r\n//export class StartEdit implements Action {\r\n//  readonly type = START_EDIT;\r\n\r\n//  constructor(public payload: number) {}\r\n//}\r\n\r\n//export class StopEdit implements Action {\r\n//  readonly type = STOP_EDIT;\r\n//}\r\n\r\n//export type ShoppingListActions =\r\n//  | AddIngredient\r\n//  | AddIngredients\r\n//  | UpdateIngredients\r\n//  | DeleteIngredients\r\n//  | StartEdit\r\n//  | StopEdit;\r\n\r\nexport const addIngredient = createAction(\r\n  '[Shopping List] Add ingredient',\r\n  props<{ ingredient: IngredientsModel }>()\r\n);\r\nexport const addIngredients = createAction(\r\n  '[Shopping List] Add ingredients',\r\n  props<{ ingredients: IngredientsModel[] }>()\r\n);\r\n\r\nexport const updateIngredient = createAction(\r\n  '[Shopping List] Update ingredient',\r\n  props<{ ingredient: IngredientsModel }>()\r\n);\r\n\r\nexport const deleteIngredient = createAction(\r\n  '[Shopping List] Delete ingredient'\r\n);\r\n\r\nexport const startEdit = createAction(\r\n  '[Shopping List] Start edit',\r\n  props<{ selectedIndex: number }>()\r\n);\r\n\r\nexport const stopEdit = createAction('[Shopping List] Stop edit');\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport { IngredientsModel } from '../../shared/ingredients.model';\r\nimport * as ShoppingListActions from './shopping-list.action';\r\n\r\nexport interface ShoppingListState {\r\n  ingredients: IngredientsModel[];\r\n  editedIngredient: IngredientsModel | null;\r\n  editedItemsIndex: number;\r\n}\r\n\r\nconst initialState: ShoppingListState = {\r\n  ingredients: [\r\n    new IngredientsModel('Apples', 5),\r\n    new IngredientsModel('Tomatoes', 10),\r\n  ],\r\n  editedIngredient: null,\r\n  editedItemsIndex: -1,\r\n};\r\n\r\n//export function shoppingListReducer(\r\n//  state: ShoppingListState = initialState,\r\n//  action: ShoppingListActions.ShoppingListActions\r\n//): ShoppingListState {\r\n//  switch (action.type) {\r\n//    case ShoppingListActions.ADD_INGREDIENT:\r\n//      return {\r\n//...state,\r\n//ingredients: [...state.ingredients, action.payload],\r\n//      };\r\n//    case ShoppingListActions.ADD_INGREDIENTS:\r\n//      return {\r\n//        ...state,\r\n//        ingredients: [...state.ingredients, ...action.payload],\r\n//      };\r\n//    case ShoppingListActions.DELETE_INGREDIENTS:\r\n//return {\r\n//  ...state,\r\n//  ingredients: state.ingredients.filter((_, igIndex) => {\r\n//    return igIndex !== state.editedItemsIndex;\r\n//  }),\r\n//};\r\n//    case ShoppingListActions.UPDATE_INGREDIENTS:\r\n//const ingredient = state.ingredients[state.editedItemsIndex];\r\n//const updatedIngredient = {\r\n//  ...ingredient,\r\n//  ...action.payload,\r\n//};\r\n//const updatedIngredients = [...state.ingredients];\r\n//updatedIngredients[state.editedItemsIndex] = updatedIngredient;\r\n//return {\r\n//  ...state,\r\n//  ingredients: updatedIngredients,\r\n//  editedIngredient: null,\r\n//  editedItemsIndex: -1,\r\n//};\r\n//    case ShoppingListActions.START_EDIT:\r\n//return {\r\n//  ...state,\r\n//  editedItemsIndex: action.payload,\r\n//  editedIngredient: { ...state.ingredients[action.payload] },\r\n//};\r\n//    case ShoppingListActions.STOP_EDIT:\r\n//      return {\r\n//...state,\r\n//editedIngredient: null,\r\n//editedItemsIndex: -1,\r\n//      };\r\n//    default:\r\n//      return state;\r\n//  }\r\n//}\r\n\r\nexport const shoppingListReducer = createReducer(\r\n  initialState,\r\n  on(ShoppingListActions.addIngredient, (state, { ingredient }) => ({\r\n    ...state,\r\n    ingredients: [...state.ingredients, ingredient],\r\n  })),\r\n  on(ShoppingListActions.addIngredients, (state, { ingredients }) => ({\r\n    ...state,\r\n    ingredients: [...state.ingredients, ...ingredients],\r\n  })),\r\n  on(ShoppingListActions.updateIngredient, (state, { ingredient }) => {\r\n    const existingIngredient = state.ingredients[state.editedItemsIndex];\r\n    const updatedIngredient = {\r\n      ...existingIngredient,\r\n      ...ingredient,\r\n    };\r\n    const updatedIngredients = [...state.ingredients];\r\n    updatedIngredients[state.editedItemsIndex] = updatedIngredient;\r\n    return {\r\n      ...state,\r\n      ingredients: updatedIngredients,\r\n      editedIngredient: null,\r\n      editedItemsIndex: -1,\r\n    };\r\n  }),\r\n  on(ShoppingListActions.deleteIngredient, (state) => ({\r\n    ...state,\r\n    ingredients: state.ingredients.filter((_, igIndex) => {\r\n      return igIndex !== state.editedItemsIndex;\r\n    }),\r\n  })),\r\n\r\n  on(ShoppingListActions.startEdit, (state, { selectedIndex }) => ({\r\n    ...state,\r\n    editedItemsIndex: selectedIndex,\r\n    editedIngredient: { ...state.ingredients[selectedIndex] },\r\n  })),\r\n\r\n  on(ShoppingListActions.stopEdit, (state) => ({\r\n    ...state,\r\n    editedIngredient: null,\r\n    editedItemsIndex: -1,\r\n  }))\r\n);\r\n","import { recipeReducer, recipeState } from './../recipe/store/recipe.reducer';\r\nimport { authReducer, authState } from './../auth/store/auth.reducer';\r\nimport {\r\n  ShoppingListState,\r\n  shoppingListReducer,\r\n} from '../shopping-list/store/shopping-list.reducer';\r\nimport { ActionReducerMap } from '@ngrx/store';\r\n\r\nexport const rootReducer = {};\r\n\r\nexport interface AppState {\r\n  shoppingList: ShoppingListState;\r\n  auth: authState;\r\n  recipes: recipeState;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<AppState, any> = {\r\n  shoppingList: shoppingListReducer,\r\n  auth: authReducer,\r\n  recipes: recipeReducer,\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: 'AIzaSyDcwZSN9HS09whlK6VOXQqahxxzEj4i-zY',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nfunction bootstrap() {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n};\n\n\n if (document.readyState === 'complete') {\n   bootstrap();\n } else {\n   document.addEventListener('DOMContentLoaded', bootstrap);\n }\n \n"],"names":["ShoppingListActions","i0","ShoppingListComponent","constructor","store","ngOnInit","ingredients","select","onEditItem","index","dispatch","startEdit","selectedIndex","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}